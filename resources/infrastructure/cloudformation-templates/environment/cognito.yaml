AWSTemplateFormatVersion: "2010-09-09"
Description: "Cognito setup"
Parameters:
  ProjectName:
    Description: "Project name"
    Type: "String"
  Environment:
    Description: "Server environment"
    Type: "String"
    AllowedValues:
      - "dev"
      - "test"
      - "prod"
  PasswordMinimumLength:
    Type: "Number"
    Default: 8
  PasswordRequireLowercase:
    Type: "String"
    Default: true
  PasswordRequireUppercase:
    Type: "String"
    Default: false
  PasswordRequireNumbers:
    Type: "String"
    Default: false
  PasswordRequireSymbols:
    Type: "String"
    Default: false
  ConsumerRoleName:
    Type: "String"

Conditions:
  IsDevEnv: !Equals ["dev", !Ref "Environment"]

Resources:
  UserPool:
    Type: "AWS::Cognito::UserPool"
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      UserPoolName: !Sub "${ProjectName}-${Environment}"
      UsernameAttributes:
        - "email"
      AutoVerifiedAttributes:
        - "email"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: !Ref "PasswordMinimumLength"
          RequireLowercase: !Ref "PasswordRequireLowercase"
          RequireUppercase: !Ref "PasswordRequireUppercase"
          RequireNumbers: !Ref "PasswordRequireNumbers"
          RequireSymbols: !Ref "PasswordRequireSymbols"
      UserPoolTags:
        project-name: !Ref "ProjectName"
        environment: !Ref "Environment"

  UserPoolSPAClient:
    Type: "AWS::Cognito::UserPoolClient"
    Properties:
      ClientName: "spa"
      IdTokenValidity: 1
      AccessTokenValidity: 1
      RefreshTokenValidity: 1
      AllowedOAuthFlows:
        - "implicit"
      AllowedOAuthScopes:
        - "email"
        - "openid"
      ExplicitAuthFlows:
        - "ALLOW_REFRESH_TOKEN_AUTH"
        - "ALLOW_ADMIN_USER_PASSWORD_AUTH"
        - "ALLOW_USER_SRP_AUTH"
      CallbackURLs:
        - "http://localhost"
      SupportedIdentityProviders:
        - "COGNITO"
      GenerateSecret: false
      UserPoolId: !Ref "UserPool"
      ReadAttributes:
        - "email"
      WriteAttributes:
        - "email"

  IAMManagedPolicy:
    Type: "AWS::IAM::ManagedPolicy"
    Properties:
      ManagedPolicyName: !Sub "${ProjectName}-${Environment}-env-cognito"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "cognito-idp:AdminCreateUser"
              - "cognito-idp:AdminDeleteUser"
              - "cognito-idp:AdminUpdateUserAttributes"
              # We grant the two extra permissions below for local development only.
              - !If
                - IsDevEnv
                - "cognito-idp:AdminSetUserPassword"
                - !Ref AWS::NoValue
              - !If
                - IsDevEnv
                - "cognito-idp:AdminResetUserPassword"
                - !Ref AWS::NoValue
            Resource: !GetAtt "UserPool.Arn"
      Roles:
        - !Ref "ConsumerRoleName"

Outputs:
  UserPoolId:
    Value: !Ref "UserPool"
  UserPoolSPAClientId:
    Value: !Ref "UserPoolSPAClient"
  UserPoolURL:
    Value: !GetAtt "UserPool.ProviderURL"
  CognitoPolicyARN:
    Value: !Ref "IAMManagedPolicy"
