services:
  postgres:
    environment:
      DB_NAME:
      DB_PORT:
      DB_ADMIN_USER:
      DB_ADMIN_PASSWORD:
      APP_DB_USER:
      APP_DB_PASSWORD:
      APP_DB_SCHEMA:{{#project.profiles.persistence-sql.deployment.to-develop.container.environment.dev.database.other-users.keycloak.enabled}}
      KC_DB_USERNAME:
      KC_DB_PASSWORD:
      KC_DB_SCHEMA:{{/project.profiles.persistence-sql.deployment.to-develop.container.environment.dev.database.other-users.keycloak.enabled}}{{#project.profiles.persistence-sql.deployment.to-develop.container.environment.dev.database.other-users.grafana.enabled}}
      GF_DATABASE_USER:
      GF_DATABASE_PASSWORD:
      GF_DATABASE_SCHEMA:{{/project.profiles.persistence-sql.deployment.to-develop.container.environment.dev.database.other-users.grafana.enabled}}
    ports:
      - mode: ingress
        host_ip: 127.0.0.1
        target: {{project.profiles.persistence-sql.deployment.to-develop.container.environment.dev.database.port}}
        published: {{project.profiles.persistence-sql.deployment.to-develop.container.environment.dev.database.port}}
        protocol: tcp
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
      - "./postgres/init-scripts/to-develop/dev:/docker-entrypoint-initdb.d:ro"

volumes:
  postgres_data: {}
